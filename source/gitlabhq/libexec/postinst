#!/bin/sh

set -e

. /usr/share/debconf/confmodule

githome=/var/lib/gitlabhq-gitolite
glhome=/var/lib/gitlabhq

bin_yamlset=/usr/libexec/gitlabhq/yaml-set

adduser --system               \
        --shell /bin/sh        \
        --gecos "GitLab"       \
        --quiet                \
        --group                \
        --no-create-home       \
        --disabled-login       \
        --home $glhome         \
        gitlab

usermod -G git gitlab

chown gitlab:gitlab $glhome
cd $glhome

gitlabhq_deploy_keys () {
  test -f $glhome/.ssh/id_rsa || {
    ssh-keygen -q -N "" -t rsa -f $glhome/.ssh/id_rsa
    chown -R gitlab:gitlab $glhome/.ssh
    chmod 0700 $glhome/.ssh
    chmod 0400 $glhome/.ssh/id_rsa
    chmod 0444 $glhome/.ssh/id_rsa.pub

    cp $glhome/.ssh/id_rsa.pub $githome/gitlab.pub
    sudo -u git -H "gitolite setup -pk $githome/gitlab.pub" 1>&2
  }
}

gitlabhq_mkdirs () {
  test -h /var/www/gitlabhq/log || ln -s /var/log/gitlabhq /var/www/gitlabhq/log
  test -d /var/www/gitlabhq/tmp || mkdir -p /var/www/gitlabhq/tmp
  test -d /var/www/gitlabhq/tmp/sockets || mkdir -p /var/www/gitlabhq/tmp/sockets
  test -d /var/www/gitlabhq/tmp/cache || mkdir -p /var/www/gitlabhq/tmp/cache
}

gitlabhq_fixperms () {
  chown gitlab /var/log/gitlabhq

  for name in database.yml gitlab.yml
  do
    cfgfile=/var/www/gitlabhq/config/$name
    if [ -f "$cfgfile" ]
    then
      chown gitlab:gitlab $cfgfile
      chmod 0600 $cfgfile
    fi
  done
  
  for name in tmp public
  do
    chown -R gitlab:gitlab /var/www/gitlabhq/$name
  done
}

gitlabhq_deploy_hooks () {
  cp /var/www/gitlabhq/lib/hooks/post-receive $githome/.gitolite/hooks/common/post-receive
  chown git:git $githome/.gitolite/hooks/common/post-receive
}

gitlabhq_configure_gitlab () {
  local host port tmp group key type ymlfile
  ymlfile=/var/www/gitlabhq/config/gitlab.yml

  test -f $ymlfile || cp /var/www/gitlabhq/config/gitlab.yml.example $ymlfile

  for tmp in gitlab:host:string gitlab:https:boolean gitlab:email_from:string \
             gitolite:ssh_host:string ldap:enabled:boolean ldap:base:string   \
             ldap:uid:string ldap:method:string ldap:bind_dn:string           \
             ldap:password:string ldap:host:
  do
    group=$(echo $tmp | cut -d: -f1)
    key=$(echo $tmp | cut -d: -f2)
    type=$(echo $tmp | cut -d: -f3)

    if db_get gitlabhq/gitlab/$group/$key
    then
      if [ $group = ldap -a $key = host ]
      then
        if expr "$RET" : "^.*:[0-9]\+$" >/dev/null
        then
          host=$(echo "$RET" | cut -d: -f1)
          port=$(echo "$RET" | cut -d: -f2)
          $bin_yamlset $ymlfile ldap host "$host":string
          $bin_yamlset $ymlfile ldap port "$port":integer
        else
          $bin_yamlset $ymlfile ldap host "$RET":string
          $bin_yamlset $ymlfile ldap port :delete
        fi
      else
        $bin_yamlset $ymlfile $group $key "$RET":$type
      fi
    fi
  done

  $bin_yamlset $ymlfile gitolite repos_path $githome/repositories:string
  $bin_yamlset $ymlfile gitolite hooks_path $githome/.gitolite/hooks:string
}

gitlabhq_configure_database () {
  local host port tmp key type ymlfile
  ymlfile=/var/www/gitlabhq/config/database.yml

  test -f $ymlfile || cp /var/www/gitlabhq/config/database.yml.mysql $ymlfile

  for tmp in adapter:string database:string pool:integer username:string password:string host:
  do
    key=$(echo $tmp | cut -d: -f1)
    type=$(echo $tmp | cut -d: -f2)
  
    if db_get gitlabhq/database/production/$key
    then
      if [ $key = host ]
      then
        if expr "$RET" : "^/.*$" >/dev/null
        then
          $bin_yamlset $ymlfile production socket "$RET":string
          $bin_yamlset $ymlfile production host :delete
          $bin_yamlset $ymlfile production port :delete
        elif expr "$RET" : "^.*:[0-9]\+$" >/dev/null
        then
          host=$(echo "$RET" | cut -d: -f1)
          port=$(echo "$RET" | cut -d: -f2)
          $bin_yamlset $ymlfile production socket :delete
          $bin_yamlset $ymlfile production host "$host":string
          $bin_yamlset $ymlfile production port "$port":integer
        else
          $bin_yamlset $ymlfile production socket :delete
          $bin_yamlset $ymlfile production port :delete
          $bin_yamlset $ymlfile production host "$RET":string
        fi
      else
        $bin_yamlset $ymlfile production $key "$RET":$type
      fi
    fi
  done
}

gitlabhq_configure_git () {
  if db_get gitlabhq/gitlab/gitlab/email_from
  then
    sudo -u gitlab -H git config --global user.name GitLab
    sudo -u gitlab -H git config --global user.email "$RET"
  fi
}

gitlabhq_assets_precompile () {
  if db_get gitlabhq/run_assets_precompile
  then
    if [ "$RET" = true ]
    then
      (cd /var/www/gitlabhq && /usr/libexec/gitlabhq/sudo-env rake assets:precompile 1>&2) || true
    fi
  fi
}

gitlabhq_mkdirs
gitlabhq_deploy_keys
gitlabhq_deploy_hooks
gitlabhq_configure_git
gitlabhq_configure_gitlab
gitlabhq_configure_database
gitlabhq_fixperms
gitlabhq_assets_precompile
