#!/usr/bin/make -f
# -*- makefile -*-

srcroot      = $(CURDIR)
tmproot      = $(srcroot)/tmp
debroot      = $(srcroot)/debian

bin_find    ?= find
bin_wget    ?= wget -q
bin_tar     ?= tar
bin_git     ?= git
bin_install ?= install
bin_env     ?= env
bin_ln      ?= ln
bin_gem     ?= gem1.9.1
runinstall   = $(bin_env) bin_find=$(bin_find)       \
                          bin_install=$(bin_install) \
                          $(srcroot)/source/install.sh
runbundle    = $(bin_env) RAILS_ENV=production     \
                          PATH=$$PATH:./vendor/bin \
                          GEM_HOME=./vendor/bundle \
                          bundle

gitlab-src     = gitlabhq-6-5-stable
gshell-src     = gitlab-shell-1.8.0
gitlab-src-url = https://github.com/gitlabhq/gitlabhq/archive/6-5-stable.tar.gz
gshell-src-url = https://github.com/gitlabhq/gitlab-shell/archive/v1.8.0.tar.gz

clean:
	dh_testdir
	dh_testroot
	rm -r -f $(tmproot) build-gitlab install-gitlab install-gitlabshell
	dh_clean

build: build-arch build-indep

build-arch: build-gitlab

build-indep: build-gitlabshell

build-gitlab:
	dh_testdir
	mkdir -p $(tmproot)
	$(bin_wget) -O - $(gitlab-src-url) | $(bin_tar) -C $(tmproot) -x -z
	$(bin_gem) install --install-dir $(tmproot)/$(gitlab-src)/vendor/bundle \
                           --bindir $(tmproot)/$(gitlab-src)/vendor/bin         \
                           --no-user-install                                    \
                           --no-rdoc                                            \
                           --no-ri bundler
	$(runinstall) $(srcroot)/source/gitlab/config  $(tmproot)/$(gitlab-src)/config
	$(runinstall) $(srcroot)/source/gitlab/bin     $(tmproot)/$(gitlab-src)/vendor/bin
	cd $(tmproot)/$(gitlab-src) && $(runbundle) install       \
                                         --deployment             \
                                         --without development test
	touch build-gitlab

build-gitlabshell:
	dh_testdir
	mkdir -p $(tmproot)
	$(bin_wget) -O - $(gshell-src-url) | $(bin_tar) -C $(tmproot) -x -z
	touch build-gitlabshell

install: pre-install install-gitlabshell install-gitlab

pre-install:
	dh_testdir
	dh_testroot
	dh_prep
	dh_installdirs

install-gitlabshell:
	$(runinstall) $(tmproot)/$(gshell-src) $(debroot)/gitlabshell/var/lib/git/gitlab-shell
	$(runinstall) $(srcroot)/source/gitlabshell/libexec $(debroot)/gitlabshell/usr/libexec/gitlab-shell
	touch install-gitlabshell

install-gitlab:
	$(runinstall) $(srcroot)/source/gitlab/.ssh            $(debroot)/gitlab/var/lib/git/.ssh
	$(runinstall) $(srcroot)/source/gitlab/libexec         $(debroot)/gitlab/usr/libexec/gitlab
	$(runinstall) $(srcroot)/source/gitlab/etc/logrotate.d $(debroot)/gitlab/etc/logrotate.d
	for f in app .bundle config db doc features lib public script vendor                                        \
                 config.ru Gemfile Gemfile.lock Rakefile VERSION;                                                   \
        do                                                                                                          \
          $(runinstall) $(tmproot)/$(gitlab-src) $(debroot)/gitlab/var/lib/git/gitlab $(tmproot)/$(gitlab-src)/$$f; \
        done
	for l in rails unicorn unicorn_rails rake;                                      \
        do                                                                              \
          $(bin_ln) -s bundle_exec $(debroot)/gitlab/var/lib/git/gitlab/vendor/bin/$$l; \
        done
	touch install-gitlab

binary: binary-indep binary-arch
	dh_testdir
	dh_testroot
	dh_installchangelogs
	dh_link
	dh_compress
	dh_fixperms
	dh_installdeb
	dh_installdebconf
	dh_installinit
	dh_gencontrol
	dh_md5sums
	dh_builddeb

binary-arch: build install

binary-indep: build install

.PHONY: clean build build-arch build-indep binary binary-arch binary-indep install
